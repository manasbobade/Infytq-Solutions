# lex_auth_012748325848399872350
# Start writing your code here
class Instructor:
    def __init__(self):
        self.__technology_skill = []
        self.__instructor_name = None
        self.__experience = None
        self.__avg_feedback = None

    def set_technology_skill(self, technology_skill):
        self.__technology_skill = technology_skill

    def set_experience(self, experience):
        self.__experience = experience

    def set_avg_feedback(self, avg_feedback):
        self.__avg_feedback = avg_feedback

    def set_instructor_name(self, instructor_name):
        self.__instructor_name = instructor_name

    def get_technology_skill(self):
        return self.__technology_skill

    def get_experience(self):
        return self.__experience

    def get_avg_feedback(self):
        return self.__avg_feedback

    def get_instructor_name(self):
        return self.__instructor_name

    def check_eligibility(self):
        if (self.__experience <= 3 and self.__avg_feedback >= 4):
            return True
        elif ((self.__experience > 3 and self.__avg_feedback >= 4.5)):
            return True
        else:
            return False

    def allocate_course(self, technology):

        if technology in self.__technology_skill:
            if self.check_eligibility():
                return True
        return False


instructor1 = Instructor()
instructor1.set_experience(4)
instructor1.set_technology_skill(["JAVA","PYTHON"])
instructor1.set_avg_feedback(4.4)
print(instructor1.allocate_course("PYTHON"))